{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 The Object Library contains a standard set of UI objects such a switches, buttons, nav bar items, etc that you can drag into Interface Builder and then use to build your app\
\
An IBAction is a method, whereas the IBOutlet is not. An Outlet is simply an object represented in the code, but you can build onto an Action and use it to affect the interface in various ways. For example, using an IBAction for a button press you can put some code in there to change the text in a label(which is typically represented with an outlet since labels do not interact with direct touch)\
\
The View Controller\'92s job is to handle changes to the user interface, and tell your app what to show the user\
\
Model-View-Controller (or MVC) is a widely used protocol that goes by a \'91separation of concerns\'92 approach and what that means is you will use different files that you designate to contain the code for Model, Model Controller, and View Controller respectively\
\
It helps keep your code clean and easy to understand by storing a type of data in the Model while a separate Model Controller handles the way that data may be modified or manipulated by the app. The Model Controller can be thought of as an intermediary between the Model and View Controller, which takes data from the Model Controller to affect the UI}